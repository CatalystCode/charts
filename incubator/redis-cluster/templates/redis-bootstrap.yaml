apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-master
  labels:
    name: {{ template "fullname" . }}-master
    redis-sentinel: "true"
    role: master
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        name: redis-master
        redis-sentinel: "true"
        role: master
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      containers:
        - name: master
          image: {{ .Values.image }}
          imagePullPolicy: "{{.Values.imagePullPolicy}}"
          env:
            - name: MASTER
              value: "true"
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: "0.1"
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
        - name: sentinel
          image: {{ .Values.image }}
          imagePullPolicy: "{{.Values.imagePullPolicy}}"
          env:
            - name: SENTINEL
              value: "true"
          ports:
            - containerPort: 26379
      volumes:
      - name: data
      {{- if .Values.persistence.disabled }}
        emptyDir: {}
      {{ else }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-pvc
      {{- end }}
---
{{- if .Values.persistence.enabled }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ template "fullname" . }}-pvc
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    volume.alpha.kubernetes.io/storage-class: {{ .Values.persistence.storageClass | quote }}
spec:
  accessModes:
    - {{ .Values.persistence.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.persistence.size | quote }}
{{- end }}